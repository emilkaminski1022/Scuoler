<!DOCTYPE html>
<html>
<head>
<title></title>
<link rel="stylesheet" href="../Player/css/pagestyles.css" type="text/css" />
<link rel="stylesheet" href="../Custom/css/pagestyles.css" type="text/css" />
<script type="text/javascript" src="../Player/js/libs/jquery-1.7.1.min.js" ></script>
<script type="text/javascript">
	AssessmentLocation = { Intro: 0, Question: 1, Review: 2 };
	AssessmentStatus = { NotAttempted: 0, Incomplete: 1, Failed: 2, Passed: 3 };

	/// the external player code uses the following function to pass in the assessment context of the page, allowing adjustments to the content to be made based on the assessment's properties and state
	function setAssessment(assessment) {
		var title = '',
			state = '';
		switch (assessment.Location) {
			case AssessmentLocation.Intro: //assessment view is on intro page
				state = 'intro';
				title = assessment.Page.name;
				break;
			case AssessmentLocation.Review: //assessment view is on results page
				//if feedback is immediate, the number of incomplete is the number of unscored questions; if feedback is delayed, number incomplete is number unanswered
				var nIncomplete = (assessment.FeedbackType == "Delayed" ? assessment.countUnansweredQuestions() : assessment.countUnscoredQuestions());
				if (assessment.sbaMode != undefined) {
					if (nIncomplete > 0) {
						state = 'incomplete';
						title = parent.Resources.SBA_Assessment_Results_Status_Incomplete_Title.replace(/%%number%%/g, nIncomplete).replace(/%%plural%%/g, nIncomplete !== 1 ? 's' : '');
					}
					else if (assessment.Status === AssessmentStatus.NotAttempted || assessment.Status === AssessmentStatus.Incomplete) {
						state = 'unscored';
						title = parent.Resources.SBA_Assessment_Results_Status_Unscored_Title;
					}
					else if (!assessment.Page.course.getCurrentPage().sbaIsScored) {
						state = 'sbaunscored';
						title = parent.Resources.SBA_Assessment_Results_Status_SBAUnscored_Title;
					}
					else if (assessment.Status === AssessmentStatus.Failed) {
						state = 'failed';
						title = parent.Resources.SBA_Assessment_Results_Status_Fail_Title;
					}
					else if (assessment.Status === AssessmentStatus.Passed) {
						state = 'passed';
						title = parent.Resources.SBA_Assessment_Results_Status_Pass_Title;
					}
				}
				else {
					if (nIncomplete > 0) {
						state = 'incomplete';
						title = parent.Resources.Assessment_Results_Status_Incomplete_Title.replace(/%%number%%/g, nIncomplete).replace(/%%plural%%/g, nIncomplete !== 1 ? 's' : '');
					}
					else if (assessment.Status === AssessmentStatus.NotAttempted || assessment.Status === AssessmentStatus.Incomplete) {
						state = 'unscored';
						title = parent.Resources.Assessment_Results_Status_Unscored_Title;
					}
					else if (assessment.Status === AssessmentStatus.Failed) {
						if (assessment.hasAttemptsLeft()) {
							state = 'canretry';
							title = parent.Resources.Assessment_Results_Status_Fail_AttemptsRemaining_Title;
						}
						else {
							state = 'noretry';
							title = parent.Resources.Assessment_Results_Status_Fail_NoAttemptsRemaining_Title;
						}
					}
					else if (assessment.Status === AssessmentStatus.Passed) {
						state = 'passed';
						title = parent.Resources.Assessment_Results_Status_Pass_Title;
					}
				}
				break;
		}

		if (state === 'intro')
			$('.results-only, .incomplete-only, .complete-only, .unscored-only, .sbaunscored-only, .passed-only, .failed-only, .canretry-only, .noretry-only').remove();
		else if (state === 'incomplete')
			$('.intro-only, .complete-only, .unscored-only, .sbaunscored-only, .passed-only, .failed-only, .canretry-only, .noretry-only').remove();
		else if (state === 'unscored')
			$('.intro-only, .incomplete-only, .sbaunscored-only, .passed-only, .failed-only, .canretry-only, .noretry-only').remove();
		else if (state === 'sbaunscored')
			$('.intro-only, .incomplete-only, .unscored-only, .passed-only, .failed-only, .canretry-only, .noretry-only').remove();
		else if (state === 'failed')
			$('.intro-only, .incomplete-only, .unscored-only, .sbaunscored-only, .passed-only, .canretry-only, .noretry-only').remove();
		else if (state === 'passed')
			$('.intro-only, .incomplete-only, .unscored-only, .sbaunscored-only, .failed-only, .canretry-only, .noretry-only').remove();
		else if (state === 'canretry')
			$('.intro-only, .incomplete-only, .unscored-only, .sbaunscored-only, .passed-only, .noretry-only').remove();
		else if (state === 'noretry')
			$('.intro-only, .incomplete-only, .unscored-only, .sbaunscored-only, .passed-only, .canretry-only').remove();
		else
			$('.intro-only, .results-only, .incomplete-only, .complete-only, .unscored-only, .sbaunscored-only, .passed-only, .failed-only, .canretry-only, .noretry-only').remove();

		title && $('.data-title').text(title);
		$('.data-score').text(assessment.getScore() + '%');
	}
</script>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
</head>
<body>

<!-- This content is loaded during many different states of the assessment, so class names should be used on elements that should be displayed only in certain states:
				- elements with class "intro-only" are displayed only on the assessment intro page
				- elements with class "results-only" are displayed only on the assessment results page
				- elements with class "incomplete-only" are displayed only on the assessment results page when assessment is not complete
				- elements with class "complete-only" are displayed only on the assessment results page when assessment is complete
				- elements with class "unscored-only" are displayed only on the assessment results page when assessment has delayed feedback and questions are all answered but not scored
				- elements with class "sbaunscored-only" are displayed only on a scenario based assessment results page when the assessment is complete and scored but sba is unscored
				- elements with class "passed-only" are displayed only on the assessment results page when assessment is completed and passed (and sba is scored when scenario based)
				- elements with class "failed-only" are displayed only on the assessment results page when assessment is completed and failed (and sba is scored when scenario based)
				- elements with class "canretry-only" are displayed only on the assessment results page when assessment is failed, but there are remaining attempts
				- elements with class "noretry-only" are displayed only on the assessment results page when assessment is fail and no attempts remain -->

<!-- Background image for the assessment page is taken from the AssessmentBackground div. There should be no more than one image for any of the possible assessement states -->
<div class="AssessmentBackground">
	<img src="en-us/Content/Images/testout_samplebackground.png" alt="" class="intro-only" />
	<img src="en-us/Content/Images/testout_samplebackground.png" alt="" class="results-only" />
</div>

<!-- Foreground content for the assessment page is scraped from the AssessmentContent divs. Use the assessment context-specific classes to mark content specific to a desired assessment state -->
<!-- Elements tagged with class name 'data-title' or 'data-score' will have content automatically inserted by the javascript code -->
<div class="AssessmentContent intro-only">
    <div id="AssessmentSRInstructions" class="visuallyhidden">Page instructions: This assessment page consists of three parts. You will use buttons within the page to navigate to each part. Part 1 is an introduction to 
to this assessment. Part 2 is a collection of questions that you must answer. Part 3 is your score card that shows you the result of the assessement.</div>
	<h1><span class="data-title"></span></h1>
	<h2>MSSP: Customer Support Essentials</h2>
	<p>Nulla et massa neque, ut sagittis lectus. Pellentesque lorem diam, vehicula eu vestibulum sit amet, auctor ut nulla. Sed mollis placerat tempus sit amet, auctor.</p>
	<p>Nullam vitae felis odio, in placerat tortor. Nullam dignissim elit sed neque porttitor lacinia in at nisi.</p>
</div>
<div class="AssessmentContent results-only">
	<h1><span class="data-title"></span></h1>
	<p class="incomplete-only">Please return and complete the remaining assessment questions.</p>
	
	<h2 class="passed-only">Congratulations!</h2>
	<p class="passed-only">You have passed this knowledge check with a score of <span class="data-score"></span>.</p>

	<h2 class="canretry-only">Better luck next time!</h2>
	<p class="failed-only">Your score of <span class="data-score"></span> does not meet the minimum requirements to pass this knowledge check.</p>

	<p class="unscored-only">You have completed all questions. Cross your fingers and click the button to see how you did.</p>
</div>

</body>
</html>